{"version":3,"sources":["Components/Navbar/Logo/Reddit-Logo-Light.svg","Components/Navbar/Logo/Reddit-Logo-Dark.svg","Components/MenuButton/Menu-Icons/three-dots-vertical.svg","Components/Searchbar/Searchbar.js","Helpers/helpers.js","Features/themeSlice/themeSlice.js","Components/Options-Menu/OptionsMenu.js","Components/MenuButton/MenuButton.js","Components/Navbar/Navbar.js","API/API.js","Features/initialPostsSlice/initialPostsSlice.js","Components/FilterMenu/FilterMenu.js","Components/ErrorCard/ErrorCard.js","Components/Footer/Footer.js","Components/NoResultsCard/NoResultsCard.js","Features/subredditImageSlice/subredditImageSlice.js","Components/SubredditIcon/SubredditIcon.js","Components/Tooltip/Tooltip.js","Components/Posts/PostCard.js","Components/SkeletonComponents/SkeletonPostCard.js","Components/PostContainer/PostContainer.js","Components/SubredditCard/SubredditCard.js","Features/featuredSubredditSlice/featuredSubredditSlice.js","Components/SkeletonComponents/SkeletonSubredditCard.js","Components/SubredditMenu/SubredditMenu.js","Components/Content/Content.js","Features/subredditSlice/subredditSlice.js","Features/filterSlice/filterSlice.js","Features/postWithCommentsSlice/postWithCommentsSlice.js","Features/subredditPosts/subreadditPostSlice.js","Features/userDetailsSlice/userDetailsSlice.js","Features/searchResultsSlice/searchResultsSlice.js","App/store.js","Components/FilteredContent/FilteredContent.js","Components/CommentCard/CommentCard.js","Components/SkeletonComponents/SkeletonCommentCard.js","Components/SkeletonComponents/SkeletonThread.js","Components/UserIcon/UserIcon.js","Components/Thread/Thread.js","Components/PostVeiw/PostView.js","Components/AboutSubreddit/AboutSubreddit.js","Components/SkeletonComponents/SkeletonAboutSubreddit.js","Components/SubredditView/SubredditView.js","Components/SearchResults/SearchResults.js","Components/NoMatch/image/PeteAndBas.jpg","Components/NoMatch/NoMatch.js","App/App.js","index.js"],"names":["_g","_g2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRedditLogoLight","_ref","svgRef","title","titleId","props","xmlns","height","width","clipRule","fillRule","strokeLinejoin","strokeMiterlimit","viewBox","ref","id","transform","r","cy","cx","fill","d","_style","ForwardRef","SvgRedditLogoDark","xmlSpace","y","x","type","className","_path","Searchbar","navigate","useNavigate","useState","searchText","setSearchText","useEffect","handleSearchTextChange","e","value","document","addEventListener","removeEventListener","tabIndex","placeholder","onChange","Spinner","animation","role","onClick","mediaPreview","post_hint","url","media","requestor","href","rel","src","alt","includes","match","oembed","html","style","frameBorder","allow","allowfullscreen","maxHeight","muted","controls","loop","reddit_video","fallback_url","upvoteFormat","upvotes","undefined","str","toString","slice","getPostTime","timeStamp","differenceInSeconds","Date","now","years","Math","floor","days","hours","minutes","NaN","getIconURL","urlString","iconURL","updateBodyTheme","theme","documentElement","setAttribute","removeAttribute","copyToClipboard","window","location","navigator","clipboard","writeText","error","console","log","options","name","initialState","reducers","addTheme","state","action","payload","themeSlice","createSlice","selectTheme","actions","OptionsMenu","dispatch","useDispatch","currentTheme","localStorage","getItem","useLocalStorage","setTheme","htmlFor","SvgThreeDotsVertical","MenuButton","display","setDisplay","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","Navbar","useSelector","localTheme","scrolled","setScrolled","onscroll","scrollY","to","apiEndPoint","initialOptions","headers","accept","getInitialPosts","a","fetch","response","ok","json","jsonResponse","data","children","Error","statusText","getSubreddit","subreddit","getFeaturedSubreddits","getFilteredSubreddits","filter","getPostWithComments","postID","getSubredditPosts","getUserDetails","userName","getSearchResults","searchTerm","API","fetchInitialPosts","createAsyncThunk","posts","loading","clearPosts","extraReducers","builder","addCase","pending","fulfilled","rejected","initialPostsSlice","selectInitialPosts","initialPosts","selectInitialPostsLoading","selectInitialPostsError","FilterMenu","ErrorCard","Card","bg","text","Header","Body","Title","Text","margin","Footer","NoResultsCard","fetchSubredditImage","subredditName","display_name_prefixed","subredditIcon","icon_img","shouldLoad","subredditImages","subredditImageSlice","SubredditIcon","imageData","renderTooltip","Tooltip","PostCard","subreddit_name_prefixed","author","ups","postTitle","subredditImageData","OverlayTrigger","placement","delay","show","hide","overlay","SkeletonPostCard","PostContainer","noResults","scrollTo","Array","map","n","index","post","SubredditCard","number","subscribers","display_name","replace","fetchFeaturedSubreddits","featuredSubreddits","selectFeaturedSubreddits","selectFeaturedSubredditsLoading","selectFeaturedSubredditsError","featuredSubredditSlice","SkeletonSubredditCard","marginTop","SubredditMenu","fontSize","subredditObject","Content","fetchSubreddit","subreddits","selectSubredditSliceLoading","subredditSlice","fetchFilteredPosts","filteredPostsSlice","selectFilteredPosts","filteredPosts","selectFilteredPostsLoading","fetchPostWithComments","comments","clearPost","clearComments","postData","commentsData","postWithCommentsSlice","selectPost","postWithComments","selectComments","selectPostWithCommentsLoading","selectPostWithCommentsError","fetchSubredditPosts","clearSubredditPosts","subredditPostsSlice","selectSubredditPosts","subredditPosts","selectSubredditPostsLoading","selectSubredditPostsError","fetchUserDetails","userIcon","userDetails","userDetailsSlice","fetchSearchResults","searchResults","clearSearchResults","searchResultsSlice","selectSearchResults","selectSearchResultsLoading","selectSearchResultsError","store","configureStore","reducer","initialPostsReducer","subredditSliceReducer","subredditImageSliceReducer","featuredSubredditSliceReducer","filteredPostsSliceReducer","postWithCommentsReducer","subreadditPostSliceReducer","userDetailsReducer","searchResultsReducer","themeReducer","FilteredContent","params","useLocation","pathname","substring","CommentCard","comment","created_utc","body","SkeletonCommentCard","marginLeft","marginBottom","borderLeft","SkeletonThread","UserIcon","userData","Thread","upvote_ratio","created","selftext","PostView","useParams","commentData","AboutSubreddit","public_description","active_user_count","toDateString","SkeletonAboutSubreddit","padding","SubredditVeiw","subredditNamePrefixed","subredditLoading","postLoading","postError","SearchResults","NoMatch","notFoundImage","App","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b79ff60a.chunk.js","sourcesContent":["var _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRedditLogoLight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 60,\n    width: 115,\n    clipRule: \"evenodd\",\n    fillRule: \"evenodd\",\n    strokeLinejoin: \"round\",\n    strokeMiterlimit: 1.4142,\n    viewBox: \"-39.158565 -22.4785 339.37423 134.871\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-14.043 -10.043)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    r: 5.687,\n    cy: 40.998,\n    cx: 249.773,\n    fill: \"#ff4500\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.549 65.247c2.79 0 4.399-2.092 4.292-4.131-.053-1.073-.161-1.771-.268-2.307-1.717-7.403-7.725-12.876-14.861-12.876-8.476 0-15.343 7.672-15.343 17.114s6.867 17.114 15.343 17.114c5.312 0 9.121-1.931 11.857-4.989 1.341-1.502 1.073-3.809-.537-4.936-1.341-.912-3.004-.59-4.238.429-1.18 1.02-3.433 3.058-7.082 3.058-4.291 0-7.939-3.702-8.744-8.584h19.581zm-10.89-12.822c3.862 0 7.189 3.004 8.423 7.135h-16.846c1.234-4.184 4.56-7.135 8.423-7.135zm-14.968-3.112c0-1.609-1.18-2.897-2.682-3.165-4.668-.697-9.067 1.019-11.588 4.185v-.43c0-1.985-1.61-3.218-3.219-3.218-1.771 0-3.219 1.448-3.219 3.218v26.288c0 1.717 1.287 3.219 3.004 3.326 1.878.107 3.434-1.341 3.434-3.219V62.725c0-6.008 4.506-10.944 10.729-10.246h.644c1.609-.108 2.897-1.503 2.897-3.166zm110.3 3.434c0-1.771-1.448-3.219-3.218-3.219-1.771 0-3.219 1.448-3.219 3.219v23.551c0 1.771 1.448 3.219 3.219 3.219 1.77 0 3.218-1.448 3.218-3.219V52.747zm-47.854-17.811c0-1.771-1.448-3.219-3.219-3.219-1.77 0-3.218 1.448-3.218 3.219V49.26c-2.2-2.2-4.936-3.273-8.209-3.273-8.476 0-15.343 7.672-15.343 17.114s6.867 17.114 15.343 17.114c3.273 0 6.063-1.127 8.262-3.327.268 1.503 1.61 2.629 3.165 2.629 1.771 0 3.219-1.448 3.219-3.219zM190.545 73.83c-4.936 0-8.906-4.774-8.906-10.729 0-5.901 3.97-10.73 8.906-10.73s8.906 4.775 8.906 10.73-4.024 10.729-8.906 10.729zm48.176-38.894c0-1.771-1.448-3.219-3.219-3.219-1.77 0-3.219 1.448-3.219 3.219V49.26c-2.199-2.2-4.935-3.273-8.208-3.273-8.476 0-15.343 7.672-15.343 17.114s6.867 17.114 15.343 17.114c3.273 0 6.062-1.127 8.262-3.327.268 1.503 1.609 2.629 3.165 2.629 1.771 0 3.219-1.448 3.219-3.219zM224.075 73.83c-4.936 0-8.905-4.774-8.905-10.729 0-5.901 3.969-10.73 8.905-10.73s8.906 4.775 8.906 10.73-3.97 10.729-8.906 10.729zm45.225 2.522V52.425h2.844c1.502 0 2.843-1.127 2.95-2.683.108-1.663-1.233-3.057-2.843-3.057H269.3v-4.507c0-1.717-1.287-3.219-3.004-3.326-1.878-.107-3.433 1.341-3.433 3.219v4.667h-2.683c-1.502 0-2.843 1.127-2.95 2.683-.108 1.663 1.234 3.058 2.843 3.058h2.736v23.927c0 1.77 1.449 3.218 3.219 3.218 1.878-.107 3.272-1.502 3.272-3.272z\",\n    fill: \"#222\",\n    fillRule: \"nonzero\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-14.043 -10.043)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    r: 44.957,\n    cy: 55,\n    cx: 59,\n    fill: \"#ff4500\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M88.989 55c0-3.648-2.95-6.545-6.545-6.545-1.77 0-3.38.697-4.56 1.824-4.506-3.219-10.676-5.311-17.543-5.579l3.004-14.056 9.764 2.092c.108 2.468 2.146 4.453 4.668 4.453 2.575 0 4.667-2.092 4.667-4.668 0-2.575-2.092-4.667-4.667-4.667-1.824 0-3.434 1.073-4.185 2.629l-10.89-2.307c-.322-.054-.644 0-.859.161-.268.161-.429.429-.482.751l-3.327 15.665c-6.974.215-13.251 2.307-17.811 5.58a6.5883 6.5883 0 00-4.56-1.824c-3.648 0-6.545 2.95-6.545 6.545 0 2.682 1.609 4.935 3.863 5.955-.108.643-.161 1.287-.161 1.985 0 10.085 11.749 18.294 26.234 18.294 14.485 0 26.234-8.155 26.234-18.294 0-.644-.054-1.342-.161-1.985 2.253-1.02 3.862-3.327 3.862-6.009zm-44.957 4.667c0-2.575 2.092-4.667 4.668-4.667 2.575 0 4.667 2.092 4.667 4.667 0 2.575-2.092 4.668-4.667 4.668-2.576.053-4.668-2.093-4.668-4.668zM70.159 72.06c-3.219 3.219-9.335 3.434-11.105 3.434-1.824 0-7.94-.269-11.106-3.434-.482-.483-.482-1.234 0-1.717.483-.482 1.234-.482 1.717 0 2.039 2.039 6.331 2.736 9.389 2.736 3.058 0 7.403-.697 9.388-2.736.483-.482 1.234-.482 1.717 0 .429.483.429 1.234 0 1.717zm-.859-7.672c-2.575 0-4.667-2.092-4.667-4.667 0-2.575 2.092-4.667 4.667-4.667 2.576 0 4.668 2.092 4.668 4.667 0 2.521-2.092 4.667-4.668 4.667z\",\n    fill: \"#fff\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedditLogoLight);\nexport default __webpack_public_path__ + \"static/media/Reddit-Logo-Light.6f87bfed.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRedditLogoDark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 60,\n    width: 115,\n    id: \"svg211\",\n    xmlSpace: \"preserve\",\n    y: 0,\n    x: 0,\n    viewBox: \"-72.99165 -41.9 632.5943 251.4\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    id: \"style188\",\n    type: \"text/css\"\n  }, \".st0{fill:#ff4500}.st1{fill:#fff}\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-56 -56)\",\n    id: \"Artwork\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"circle190\",\n    r: 10.6,\n    cy: 113.7,\n    cx: 495.4,\n    className: \"st0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path192\",\n    d: \"M344 158.9c5.2 0 8.2-3.9 8-7.7-.1-2-.3-3.3-.5-4.3-3.2-13.8-14.4-24-27.7-24-15.8 0-28.6 14.3-28.6 31.9 0 17.6 12.8 31.9 28.6 31.9 9.9 0 17-3.6 22.1-9.3 2.5-2.8 2-7.1-1-9.2-2.5-1.7-5.6-1.1-7.9.8-2.2 1.9-6.4 5.7-13.2 5.7-8 0-14.8-6.9-16.3-16H344zM323.7 135c7.2 0 13.4 5.6 15.7 13.3H308c2.3-7.8 8.5-13.3 15.7-13.3z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path194\",\n    d: \"M295.8 129.2c0-3-2.2-5.4-5-5.9-8.7-1.3-16.9 1.9-21.6 7.8v-.8c0-3.7-3-6-6-6-3.3 0-6 2.7-6 6v49c0 3.2 2.4 6 5.6 6.2 3.5.2 6.4-2.5 6.4-6v-25.3c0-11.2 8.4-20.4 20-19.1h1.2c3-.2 5.4-2.8 5.4-5.9z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path196\",\n    d: \"M501.4 135.6c0-3.3-2.7-6-6-6s-6 2.7-6 6v43.9c0 3.3 2.7 6 6 6s6-2.7 6-6v-43.9z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path198\",\n    d: \"M412.2 102.4c0-3.3-2.7-6-6-6s-6 2.7-6 6v26.7c-4.1-4.1-9.2-6.1-15.3-6.1-15.8 0-28.6 14.3-28.6 31.9 0 17.6 12.8 31.9 28.6 31.9 6.1 0 11.3-2.1 15.4-6.2.5 2.8 3 4.9 5.9 4.9 3.3 0 6-2.7 6-6v-77.1zM385 174.9c-9.2 0-16.6-8.9-16.6-20 0-11 7.4-20 16.6-20 9.2 0 16.6 8.9 16.6 20s-7.5 20-16.6 20z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path200\",\n    d: \"M474.8 102.4c0-3.3-2.7-6-6-6s-6 2.7-6 6v26.7c-4.1-4.1-9.2-6.1-15.3-6.1-15.8 0-28.6 14.3-28.6 31.9 0 17.6 12.8 31.9 28.6 31.9 6.1 0 11.3-2.1 15.4-6.2.5 2.8 3 4.9 5.9 4.9 3.3 0 6-2.7 6-6v-77.1zm-27.3 72.5c-9.2 0-16.6-8.9-16.6-20 0-11 7.4-20 16.6-20 9.2 0 16.6 8.9 16.6 20s-7.4 20-16.6 20z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path202\",\n    d: \"M531.8 179.6V135h5.3c2.8 0 5.3-2.1 5.5-5 .2-3.1-2.3-5.7-5.3-5.7h-5.5v-8.4c0-3.2-2.4-6-5.6-6.2-3.5-.2-6.4 2.5-6.4 6v8.7h-5c-2.8 0-5.3 2.1-5.5 5-.2 3.1 2.3 5.7 5.3 5.7h5.1v44.6c0 3.3 2.7 6 6 6 3.5-.2 6.1-2.8 6.1-6.1z\",\n    className: \"st1\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"g208\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"circle204\",\n    r: 83.8,\n    cy: 139.8,\n    cx: 139.8,\n    className: \"st0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path206\",\n    d: \"M195.7 139.8c0-6.8-5.5-12.2-12.2-12.2-3.3 0-6.3 1.3-8.5 3.4-8.4-6-19.9-9.9-32.7-10.4l5.6-26.2 18.2 3.9c.2 4.6 4 8.3 8.7 8.3 4.8 0 8.7-3.9 8.7-8.7 0-4.8-3.9-8.7-8.7-8.7-3.4 0-6.4 2-7.8 4.9l-20.3-4.3c-.6-.1-1.2 0-1.6.3-.5.3-.8.8-.9 1.4l-6.2 29.2c-13 .4-24.7 4.3-33.2 10.4-2.2-2.1-5.2-3.4-8.5-3.4-6.8 0-12.2 5.5-12.2 12.2 0 5 3 9.2 7.2 11.1-.2 1.2-.3 2.4-.3 3.7 0 18.8 21.9 34.1 48.9 34.1s48.9-15.2 48.9-34.1c0-1.2-.1-2.5-.3-3.7 4.2-1.9 7.2-6.2 7.2-11.2zm-83.8 8.7c0-4.8 3.9-8.7 8.7-8.7 4.8 0 8.7 3.9 8.7 8.7 0 4.8-3.9 8.7-8.7 8.7-4.8.1-8.7-3.9-8.7-8.7zm48.7 23.1c-6 6-17.4 6.4-20.7 6.4-3.4 0-14.8-.5-20.7-6.4-.9-.9-.9-2.3 0-3.2.9-.9 2.3-.9 3.2 0 3.8 3.8 11.8 5.1 17.5 5.1 5.7 0 13.8-1.3 17.5-5.1.9-.9 2.3-.9 3.2 0 .8.9.8 2.3 0 3.2zm-1.6-14.3c-4.8 0-8.7-3.9-8.7-8.7 0-4.8 3.9-8.7 8.7-8.7 4.8 0 8.7 3.9 8.7 8.7 0 4.7-3.9 8.7-8.7 8.7z\",\n    className: \"st1\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRedditLogoDark);\nexport default __webpack_public_path__ + \"static/media/Reddit-Logo-Dark.1854472a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgThreeDotsVertical(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 60,\n    fill: \"currentColor\",\n    className: \"bi bi-three-dots-vertical\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDotsVertical);\nexport default __webpack_public_path__ + \"static/media/three-dots-vertical.0a4db110.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport './Searchbar.css';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { FcSearch } from 'react-icons/fc'\r\n\r\n\r\nconst Searchbar = () => {\r\n    const navigate = useNavigate();\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const handleSearchIconClick = () => {\r\n        if(searchText !== '') {\r\n            navigate(`/search/${searchText}`);\r\n            return setSearchText('');\r\n        } else return;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    const  handleSearchTextChange = (e) => {\r\n        if (e.key === 'Enter' || e.key === 'NumpadEnter' || e.key === 13) {\r\n            navigate(`/search/${e.target.value}`);\r\n            return setSearchText('');\r\n            } else return;\r\n    }\r\n\r\n        document.addEventListener('keydown', handleSearchTextChange);\r\n\r\n        return () => document.removeEventListener('keydown', handleSearchTextChange);\r\n        \r\n    }, [searchText, navigate]);\r\n\r\n    return ( \r\n        <div \r\n            data-testid='searchbar' \r\n            className='search-container' \r\n            tabIndex='1'>\r\n            <input className='searchbar' \r\n                    type='text' \r\n                    value={searchText}\r\n                    placeholder='Search...' \r\n                    onChange={(e) => setSearchText(e.target.value)}\r\n                    />\r\n\r\n                    {searchText !== '' && \r\n                    <Spinner animation=\"border\" role=\"status\" >\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>}         \r\n              \r\n            <FcSearch className='search-icon' onClick={() => handleSearchIconClick()} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\n\r\n// media preview helper\r\n\r\nexport const mediaPreview = ( post_hint, url, media, requestor ) => {\r\n\r\n    if (post_hint ==='link') {\r\n        return ( <div className='external-link'>\r\n                    <a href={url} target='_blank' rel=\"noreferrer\">\r\n                    <span>External Link</span>\r\n                    </a>\r\n                 </div>   \r\n                );\r\n    };\r\n\r\n    if (post_hint === 'image') {\r\n        return (\r\n            <img src={url} alt='media preview' className='media-preview' />\r\n        );\r\n    };\r\n\r\n    // todo - figure out how to parse iframe html strings - \"https://gfycat.com\" - also produces these.\r\n    if (post_hint === 'rich:video') {\r\n        if (url.includes('youtu')) {\r\n            const escapedIframeString = media.oembed.html;\r\n            const regex = /(https):\\/\\/([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])/m;\r\n            const match = escapedIframeString.match(regex)\r\n           \r\n            if (match && requestor === 'post-card') {  \r\n                return ( \r\n                    <iframe \r\n                    style={{width:\"100%\", height:\"100%\"}}\r\n                    width=\"560\" \r\n                            height=\"315\" \r\n                            src={match[0]}\r\n                            title=\"YouTube video player\" \r\n                            frameBorder=\"0\" \r\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                            allowfullscreen>\r\n                    </iframe>) \r\n                } else if (match && requestor === 'thread') {\r\n\r\n                return (\r\n                <iframe \r\n                    style={{width:\"100%\", maxHeight:\"100%\"}}\r\n                        width=\"560\" \r\n                        height=\"315\" \r\n                        src={match[0]}\r\n                        title=\"YouTube video player\" \r\n                        frameBorder=\"0\" \r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowfullscreen>\r\n                </iframe> )\r\n\r\n            } else return null;\r\n            \r\n        } else {\r\n             return ( <embed \r\n                            type=\"video/mp4\" title='media preview' \r\n                            src={url} muted />)\r\n        };\r\n    };\r\n\r\n    if (post_hint === 'hosted:video') {\r\n        return (\r\n            <video controls loop muted aria-label='media preview'>\r\n                <source type=\"video/mp4\" src={media.reddit_video.fallback_url} />\r\n            </video>\r\n        );\r\n    };\r\n\r\n    return null;\r\n};\r\n\r\nexport const postTitleTrim = (postTitle) => {\r\n    if (postTitle.length > 175) {\r\n        const postTitletrimmed = postTitle.slice(0,175) + '...'\r\n        return postTitletrimmed\r\n    }\r\n    return postTitle;\r\n}\r\n\r\nexport const upvoteFormat = (upvotes) => {\r\n    if (upvotes === undefined) return 0;\r\n    let str = upvotes.toString();\r\n    if (upvotes > 1000000) {\r\n        return str.slice(0,1) + '.' + str.slice(1,2) + 'M';\r\n    }\r\n    if (upvotes > 100000 && upvotes < 1000000) {\r\n        return str.slice(0,3) + '.' + str.slice(3,4) + 'K';\r\n    }\r\n    if (upvotes > 10000 && upvotes < 100000) {\r\n        return str.slice(0,2) + '.' + str.slice(2,3) + 'K';\r\n    }\r\n    if (upvotes > 1000 && upvotes < 10000) {\r\n        return str.slice(0,1) + '.' + str.slice(1,2) + 'K';\r\n    }\r\n    return str;\r\n}\r\n\r\nexport const addCommas = (number) => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const getPostTime = (timeStamp) => {\r\n    const currentTime = Date.now()\r\n    const postDate = new Date(timeStamp * 1000)\r\n    \r\n    const differenceInSeconds = (currentTime - postDate) / 1000;\r\n    const years = Math.floor(differenceInSeconds/31536000)\r\n    const days = Math.floor(differenceInSeconds / 86400);\r\n    const hours = Math.floor(differenceInSeconds / 3600);\r\n    const minutes = Math.floor((differenceInSeconds % 3600) / 60);\r\n\r\n    if (years > 0) return `${years} years ago`;\r\n    if (days > 0) return `${days} days ago`;\r\n    if (hours > 0) return `${hours} hours ago`;\r\n    if (minutes > 0 ) return `${minutes} minuets ago`;\r\n    return NaN + ' ago';\r\n}\r\n\r\nexport const getDate = (timeStamp) => {\r\n    const date = new Date(timeStamp * 1000)\r\n    return date.toDateString().replace(/(\\w{3}) /m, '');\r\n}\r\n\r\nexport const getIconURL = (urlString) => {\r\n    // \\+ escaped -  https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#&//=]*)/g\r\n    const regex = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#&//=]*)/g;\r\n    const iconURL = urlString.match(regex);\r\n    if (iconURL) return iconURL;\r\n    return urlString\r\n}\r\n\r\n export const updateBodyTheme = (theme) => {\r\n    if (theme === 'dark') return document.documentElement.setAttribute('data-theme', 'dark');\r\n    if (theme === 'light') return document.documentElement.removeAttribute('data-theme', 'dark');\r\n    return null;\r\n  }\r\n\r\n  export const copyToClipboard = () => {\r\n      const url = window.location.href;\r\n      try {\r\n          navigator.clipboard.writeText(url);\r\n      } catch (error) {\r\n          console.log(error);\r\n      }\r\n  };","// probably overkill for managing thememe, however we already have a Redux store configured!\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    theme: '',\r\n}\r\n\r\nconst options = {\r\n    name: 'themeSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        addTheme: (state, action) => {state.theme = action.payload}\r\n    }\r\n};\r\n\r\nconst themeSlice = createSlice(options);\r\n\r\nexport const selectTheme = state => state.theme.theme;\r\n\r\nexport default themeSlice.reducer;\r\nexport const { addTheme } = themeSlice.actions;\r\n\r\n","import React from \"react\";\r\nimport './OptionsMenu.css'\r\nimport { GiNightSky } from 'react-icons/gi';\r\nimport { FaGithub, FaRedditAlien } from 'react-icons/fa';\r\nimport { WiDaySunny } from 'react-icons/wi';\r\nimport useLocalStorage from 'use-local-storage';\r\nimport { updateBodyTheme } from \"../../Helpers/helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTheme } from \"../../Features/themeSlice/themeSlice\";\r\n\r\nconst OptionsMenu = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentTheme = window.localStorage.getItem('theme');\r\n    const [theme, setTheme] = useLocalStorage('app-theme', currentTheme === 'dark' ? 'dark' : 'light');\r\n\r\n    const handleClick = () => {\r\n        // set theme is asynchronous and hence strings have to be passed to store and updateBodyTheme or the old theme is passed.\r\n        if (theme === 'light') {\r\n            setTheme('dark');\r\n            dispatch(addTheme('dark'));\r\n            return updateBodyTheme('dark');\r\n        }\r\n        if (theme === 'dark') {\r\n            setTheme('light');\r\n            dispatch(addTheme('light'));\r\n            return updateBodyTheme('light');\r\n        }\r\n    } \r\n\r\n    return (\r\n            <div data-testid='options-menu' aria-label='site options menu' className='options-menu'>\r\n                <span className='options-text light-grey veiw-options'> View options </span>\r\n                { theme === 'dark' ? <GiNightSky data-testid='night-mode-icon' className='icon nightmode-icon' /> \r\n                : <WiDaySunny data-testid='night-mode-icon' className='icon nightmode-icon' />}\r\n                <span className='options-text nightmode-text'>Night Mode</span>\r\n                <label id='nightmode-slider' className=\"nightmode-slider\" htmlFor=\"checkbox\">\r\n                    <input  data-testid='nightmode-checkbox' \r\n                            aria-labelledby='nightmode-slider' \r\n                            type=\"checkbox\" \r\n                            id=\"checkbox\" \r\n                            onClick={() => handleClick()} \r\n                            />\r\n                    <div data-testid='nightmode-slider' \r\n                        aria-labelledby='nightmode-slider' \r\n                        className=\"round slider\">\r\n                    </div>\r\n                </label>\r\n                <span className='options-text light-grey more-stuff'> More Stuff </span> \r\n                <a className='github-anchor' href='https://github.com/jumboindex' target='_blank' rel=\"noreferrer\">\r\n                    <FaGithub data-testid='github-icon' alt='github icon' className='icon github-icon' />\r\n                    <span className='options-text github-text'>Github</span>\r\n                </a>\r\n                <a className='reddit-anchor'  href='https://reddit.com' target='_blank' rel=\"noreferrer\">\r\n                    <FaRedditAlien data-testid='reddit-icon' alt='github icon' className='icon reddit-icon' />\r\n                    <span href='https://reddit.com' target='_blank' rel=\"noreferrer\" className='options-text reddit-text'>Visit Reddit</span> \r\n                </a>\r\n            </div>\r\n        )\r\n      \r\n}\r\n\r\nexport default OptionsMenu;","import React, {  useState } from \"react\";\r\nimport OptionsMenu from \"../Options-Menu/OptionsMenu\";\r\nimport { ReactComponent as MenuIcon } from './Menu-Icons/three-dots-vertical.svg'\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nconst MenuButton = () => {\r\n    const [ display, setDisplay ] = useState(false);\r\n    return (\r\n        <div data-testid='menu-button-component'>\r\n            <button data-testid='menu-button' aria-label='menu button' className='menu-btn' onClick={() => setDisplay(!display)}>\r\n                <MenuIcon data-testid='menu-icon' alt='menu button icon' className='menu' />\r\n            </button>\r\n            <CSSTransition \r\n                            in={display} \r\n                            timeout={400} \r\n                            classNames={'options-menu'} \r\n                            mountOnEnter={false}\r\n                            unmountOnExit={true}\r\n                            >\r\n                <OptionsMenu />\r\n            </CSSTransition>    \r\n        </div>\r\n    )\r\n}    \r\n\r\n\r\nexport default MenuButton;","import React, { useEffect, useState } from \"react\";\r\nimport './Navbar.css';\r\nimport { ReactComponent as LogoLight } from './Logo/Reddit-Logo-Light.svg'\r\nimport { ReactComponent as LogoDark } from './Logo/Reddit-Logo-Dark.svg'\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport MenuButton from \"../MenuButton/MenuButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTheme, selectTheme } from \"../../Features/themeSlice/themeSlice\";\r\nimport useLocalStorage from \"use-local-storage\";\r\n\r\nconst Navbar = () => {\r\n\r\n   \r\n    const currentTheme = useSelector(selectTheme);\r\n    const [ localTheme ] = useLocalStorage('app-theme', 'light')\r\n    const [ scrolled, setScrolled ] = useState(false);\r\n    const dispatch = useDispatch();\r\n   \r\n    useEffect(() => {\r\n        window.onscroll = () => {\r\n            if (window.scrollY > 50) setScrolled(true);\r\n            else setScrolled(false);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(addTheme(localTheme));\r\n    }, [localTheme, dispatch])\r\n\r\n\r\n    return (\r\n        <nav data-testid='navbar'  aria-label='site navigation bar' className={scrolled ? 'nav-shaddow nav-main' : 'nav-main'}>\r\n            <Link to='/'>  \r\n                    { currentTheme === 'light' ? \r\n                    <LogoLight data-testid='reddit-logo' className='logo' alt='reddit logo' />\r\n                    : <LogoDark data-testid='reddit-logo' className='logo' alt='reddit logo' />}\r\n            </Link>    \r\n            <Searchbar />\r\n            <MenuButton />\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","const apiEndPoint = 'https://api.reddit.com/';\r\nconst initialOptions = {\r\n    headers: {\r\n        accept: 'application/json'\r\n    }\r\n};\r\n\r\nconst getInitialPosts = async () => {\r\n\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}.json`, initialOptions);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data.children;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst getSubreddit = async (subreddit) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}${subreddit}/about.json`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst getFeaturedSubreddits = async () => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}subreddits.json`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data.children;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nconst getFilteredSubreddits = async (filter) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}${filter}.json`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data.children;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getPostWithComments = async ({subreddit, postID}) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}r/${subreddit}/comments/${postID}.json`, initialOptions);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst getSubredditPosts = async (subreddit) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}${subreddit}.json`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data.children;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nconst getUserDetails = async (userName) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}user/${userName}/about.json`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst getSearchResults = async (searchTerm) => {\r\n    try {\r\n        const response = await fetch(`${apiEndPoint}search.json?q=${searchTerm}`);\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse.data.children;\r\n        }\r\n        throw new Error('request failed' + response.statusText);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const API = {\r\n    getInitialPosts,\r\n    getSubreddit,\r\n    getFeaturedSubreddits,\r\n    getFilteredSubreddits,\r\n    getPostWithComments,\r\n    getSubredditPosts,\r\n    getUserDetails,\r\n    getSearchResults\r\n};","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\n\r\nexport const fetchInitialPosts = createAsyncThunk('initialPostsSlice/fetchInitialPosts', async () => {\r\n    const response = await API.getInitialPosts();\r\n    return response; \r\n})\r\n\r\nconst options = {\r\n    name: 'initialPostsSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        clearPosts: state => {state.posts = []}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchInitialPosts.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchInitialPosts.fulfilled, (state, action) => {\r\n            state.posts = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchInitialPosts.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n\r\n};\r\n\r\nconst initialPostsSlice = createSlice(options);\r\n\r\nexport const selectInitialPosts = state => state.initialPosts.posts;\r\nexport const selectInitialPostsLoading = state => state.initialPosts.loading;\r\nexport const selectInitialPostsError = state => state.initialPosts.error;\r\n\r\nexport default initialPostsSlice.reducer;\r\nexport const { clearPosts } = initialPostsSlice.actions;\r\n","import React from \"react\";\r\nimport './FilterMenu.css';\r\nimport { GoFlame } from 'react-icons/go';\r\nimport { CgFileDocument } from 'react-icons/cg';\r\nimport { HiTrendingUp } from 'react-icons/hi';\r\nimport { RiBarChart2Fill } from 'react-icons/ri';\r\nimport { MdAutoAwesomeMotion } from 'react-icons/md';\r\nimport { Link } from \"react-router-dom\";\r\n    \r\n\r\nconst FilterMenu = () => {\r\n    return (\r\n        <aside data-testid='filter-menu' className='filter'>\r\n            <Link to='/'>\r\n                <div data-testid='filter-container' className='filter-container'>\r\n                    <MdAutoAwesomeMotion data-testid='all-icon' className='filter-icon' />\r\n                    <span data-testid='all-text' className='filter-font'>All</span>\r\n                </div>\r\n            </Link>\r\n            <Link to='/hot'>\r\n                <div data-testid='filter-container' className='filter-container'>\r\n                    <GoFlame  className='filter-icon' /> \r\n                        <span  className='filter-font'>Hot</span>\r\n                </div>\r\n            </Link>\r\n            <Link to='/new'>\r\n                <div data-testid='filter-container' className='filter-container'>\r\n                    <CgFileDocument  className='filter-icon' /> \r\n                    <span className='filter-font'>New</span>\r\n                </div>\r\n            </Link>\r\n            <Link to='/rising'>\r\n                <div data-testid='filter-container' className='filter-container'>\r\n                    <HiTrendingUp  className='filter-icon' /> \r\n                        <span className='filter-font'>Rising</span>\r\n                </div>\r\n            </Link>\r\n            <Link to='/top'>\r\n                <div data-testid='filter-container' className='filter-container'>\r\n                    <RiBarChart2Fill  className='filter-icon' /> \r\n                        <span className='filter-font'>Top</span>\r\n                </div>\r\n            </Link>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default FilterMenu;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Error.css';\r\n\r\nconst ErrorCard = () => {\r\n    \r\n    return (\r\n            <Card\r\n                bg='danger'\r\n                text='white'\r\n                style={{ width: '18rem' }}\r\n                className=\"mb-2 error-card\" >\r\n                <Card.Header>Error!</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title> Application Error  </Card.Title>\r\n                    <Card.Text>\r\n                        Either Reddit is offline, or a Fetch request has failed.\r\n                        <Link to='/'>\r\n                            <p style={{margin: '1em 0'}}>Go home</p>\r\n                        </Link>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    );  \r\n}\r\n\r\nexport default ErrorCard;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n       \r\n            <footer className='app-footer'>\r\n               <a href='https://github.com/jumboindex/Reddit-Minimal' target='_blank' rel=\"noreferrer\"> About </a>\r\n               |<a href='' target='_blank' rel=\"noreferrer\"> License </a>\r\n               | <a href='https://github.com/jumboindex/Reddit-Minimal/issues' target='_blank' rel=\"noreferrer\"> Issues </a>\r\n               | <a href='https://github.com/jumboindex/Reddit-Minimal/labels/backlog' target='_blank' rel=\"noreferrer\"> Backlog </a>\r\n            </footer>\r\n       \r\n    )\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from \"react-router-dom\";\r\nimport './NoResults.css';\r\n\r\nconst NoResultsCard = () => {\r\n    \r\n    return (\r\n            <Card\r\n                bg='danger'\r\n                text='white'\r\n                style={{ width: '18rem' }}\r\n                className=\"mb-2 no-results\" >\r\n                <Card.Header>Error!</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title> No Results Found </Card.Title>\r\n                    <Card.Text>\r\n                        Try Searching for another term!\r\n                        <Link to='/'>\r\n                            <p style={{margin: '1em 0'}}>Go home</p>\r\n                        </Link>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n    );  \r\n}\r\n\r\nexport default NoResultsCard;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    subredditImages:{},\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\nexport const fetchSubredditImage = createAsyncThunk('subredditSlice/FetchSubredditImage', async (subreddit) => {\r\n    const response = await API.getSubreddit(subreddit);\r\n    const subredditName = response.display_name_prefixed;\r\n    const subredditIcon = response.icon_img;\r\n    let shouldLoad;\r\n    \r\n    if (subredditIcon === '' || subredditIcon === null) shouldLoad = false;\r\n    else shouldLoad = true;\r\n    \r\n    const payload = { subredditName, subredditIcon, shouldLoad };\r\n    return payload;\r\n})\r\n\r\nconst options = {\r\n    name:'subredditsImageSlice',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchSubredditImage.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubredditImage.fulfilled, (state, action) => {                \r\n            state.subredditImages[action.payload.subredditName] = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubredditImage.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst subredditImageSlice = createSlice(options);\r\n\r\nexport default subredditImageSlice.reducer;","import React from \"react\";\r\nimport { BsPersonFill } from 'react-icons/bs'\r\n\r\n        \r\nconst SubredditIcon = ({ imageData, alt}) => { \r\n\r\nlet shouldLoad = imageData ?  imageData.shouldLoad : false;\r\n\r\n    return (\r\n        <div>\r\n        { shouldLoad ? \r\n        <img src={imageData.subredditIcon} alt={alt} className='post-card-img' /> \r\n        : \r\n        <BsPersonFill className='no-image'/>\r\n        }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SubredditIcon;\r\n\r\n","import React from 'react';\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nconst renderTooltip = (props) => {\r\n\r\n    return (\r\n        <Tooltip \r\n            id=\"button-tooltip\" \r\n            {...props} >\r\n            copy url\r\n        </Tooltip>    \r\n    );\r\n\r\n};\r\n\r\nexport default renderTooltip;","import React, { useEffect } from \"react\";\r\nimport './PostCard.css';\r\nimport { MdComment } from 'react-icons/md';\r\nimport { BiLinkExternal } from 'react-icons/bi';\r\nimport { BsShareFill } from 'react-icons/bs';\r\nimport { copyToClipboard, mediaPreview, postTitleTrim, upvoteFormat } from \"../../Helpers/helpers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchSubredditImage } from \"../../Features/subredditImageSlice/subredditImageSlice\";\r\nimport SubredditIcon from \"../SubredditIcon/SubredditIcon\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { OverlayTrigger } from \"react-bootstrap\";\r\nimport renderTooltip from \"../Tooltip/Tooltip\";\r\n\r\n\r\nconst PostCard = ({ data }) => {\r\n\r\n    const { title, subreddit_name_prefixed, author, ups, post_hint, url, media, subreddit, id} = data.data;\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchSubredditImage(subreddit_name_prefixed));\r\n    }, [dispatch, subreddit_name_prefixed]);\r\n    \r\n    const subredditImageData = useSelector(state => state.subredditImages.subredditImages[subreddit_name_prefixed]);\r\n    \r\n    return (\r\n        <div data-testid='post-card' className='post-card'>\r\n            <div className='post-card-container'>\r\n                <header className='post-card-title'>\r\n                    <div className='post-card-img-container'>\r\n                        <SubredditIcon imageData={subredditImageData} alt={subreddit_name_prefixed + ' icon'} />\r\n                    </div>\r\n                    <span className='post-card-link'>{subreddit_name_prefixed}</span>\r\n                    <span className='post-card-posted-by'>Posted by u/{author}</span>\r\n                </header>\r\n\r\n                <div className='post-card-content'>\r\n                    <Link to={`/post/${subreddit}/${id}`}>\r\n                        <h2 className='post-card-preview'>{postTitleTrim(title)}</h2>\r\n                    </Link>\r\n                    <footer className='post-card-footer'>\r\n                        <Link to={`/post/${subreddit}/${id}`}>\r\n                            <div className='post-card-actions'><MdComment className='post-card-icon' /><span className='post-card-text'>Comments</span></div>\r\n                        </Link>    \r\n                        <Link to={`/post/${subreddit}/${id}`}>\r\n                        <div className='post-card-actions'><BiLinkExternal className='post-card-icon' /><span className='post-card-text'> Details </span></div>\r\n                        </Link>\r\n                        <div className='post-card-actions' onClick={() => copyToClipboard()}>\r\n                            <BsShareFill className='post-card-icon' />\r\n                            <OverlayTrigger\r\n                                placement=\"right\"\r\n                                delay={{ show: 150, hide: 400 }}\r\n                                overlay={renderTooltip}\r\n                                \r\n                                >\r\n                                <span className='post-card-text'> Share </span>\r\n                            </OverlayTrigger>    \r\n                        </div>\r\n                    </footer>\r\n                </div>\r\n            </div> \r\n            { post_hint ? \r\n                <div className='post-card-media-preview'>\r\n                    <div className='post-card-media-container'>\r\n                    {mediaPreview(post_hint, url, media, 'post-card')} \r\n                    </div>\r\n                </div> : null}\r\n            <aside className='post-card-votes'>\r\n                <h2>{upvoteFormat(ups)}</h2>\r\n            </aside>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostCard;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst SkeletonPostCard = () => {\r\n\r\nreturn (\r\n    <div data-testid='post-card' className='post-card'>\r\n            <div className='post-card-container'>\r\n                <header className='post-card-title'>\r\n                    <div className='post-card-img-container skeleton'></div>\r\n                    <span className='post-card-link' style={{width: '10%'}}> <div className='skeleton skeleton-detail'></div> </span>\r\n                    <span className='post-card-posted-by' style={{width: '15%'}}><div className='skeleton skeleton-detail'></div></span>\r\n                </header>\r\n\r\n                <div className='post-card-content'>\r\n                    <h2 className='post-card-preview'>\r\n                        <div className='skeleton skeleton-text'></div>\r\n                        <div className='skeleton skeleton-text'></div>\r\n                        <div className='skeleton skeleton-text'></div>\r\n                    </h2>\r\n                    <footer className='post-card-footer' style={{width: '60%'}} >\r\n                        <div className='skeleton skeleton-detail' \r\n                        style={{width: '50%',\r\n                                margin: '0 0 1.5em 1em'}} >\r\n                        </div>\r\n                    </footer>\r\n                </div>    \r\n            </div> \r\n            <aside className='post-card-votes'>\r\n                <div className='skeleton skeleton-detail'></div>\r\n            </aside>\r\n        </div>\r\n)\r\n\r\n};\r\n\r\nexport default SkeletonPostCard;","import React, { useEffect } from \"react\";\r\nimport ErrorCard from \"../ErrorCard/ErrorCard\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport NoResultsCard from \"../NoResultsCard/NoResultsCard\";\r\nimport PostCard from \"../Posts/PostCard\";\r\nimport SkeletonPostCard from \"../SkeletonComponents/SkeletonPostCard\";\r\nimport './PostContainer.css';\r\n\r\nconst PostContainer = ({ data, loading, noResults, error }) => {\r\n    const skeletonNumber = 24;\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n      }, [])\r\n\r\n    if (loading) return (\r\n        <section data-testid='post-container' className='post-container'>\r\n        { [...Array(skeletonNumber)].map((n, index) => {\r\n            return <SkeletonPostCard key={index} />\r\n        })}\r\n            <Footer />         \r\n        </section>); \r\n        \r\n    if (noResults) return (\r\n        <section data-testid='post-container' className='post-container'>\r\n            <NoResultsCard />\r\n            <Footer />\r\n        </section>\r\n    );\r\n\r\n    if (error) return (\r\n        <section data-testid='post-container' className='post-container'>\r\n            <ErrorCard /> \r\n            <Footer /> \r\n        </section>\r\n    );\r\n\r\n    return (\r\n        <section data-testid='post-container' className='post-container'>\r\n            {data.map( (post, index) => \r\n            <PostCard key={index} data={post} />)}\r\n            <Footer />\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default PostContainer; ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addCommas } from \"../../Helpers/helpers\";\r\nimport SubredditIcon from \"../SubredditIcon/SubredditIcon\";\r\nimport './SubredditCard.css';\r\n\r\nconst SubredditCard = ({ data }) => {\r\n\r\n    const { display_name_prefixed, subscribers, icon_img, display_name} = data.data;\r\n\r\n    return (\r\n        <Link to={`/subreddit/${display_name}`}>\r\n            <div data-testid='subreddit-card' className='subreddit-card'>\r\n                <div className='subreddit-card-img-container'>\r\n                    { icon_img ? <img src={icon_img} alt={display_name_prefixed + ' icon'} className='subreddit-card-img' /> : <SubredditIcon className='subreddit-icon' /> }\r\n                </div>\r\n                <div className='subreddit-card-text-container'>\r\n                    <span className='subreddit-card-title'>{display_name_prefixed}</span>\r\n                    <br />\r\n                    <span className='subreddit-card-subs'>{addCommas(subscribers)} subscribers</span>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n\r\n};\r\n\r\nexport default SubredditCard;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    featuredSubreddits: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const fetchFeaturedSubreddits = createAsyncThunk('featuredSubredditSlice/FetchFeaturedSubreddits', async () => {\r\n    const response = await API.getFeaturedSubreddits();\r\n    return response;\r\n})\r\n\r\nconst options = {\r\n    name:'featuredSubredditsSlice',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchFeaturedSubreddits.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchFeaturedSubreddits.fulfilled, (state, action) => {\r\n            state.featuredSubreddits = action.payload\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchFeaturedSubreddits.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n}\r\n\r\nexport const selectFeaturedSubreddits = state => state.featuredSubreddits.featuredSubreddits;\r\nexport const selectFeaturedSubredditsLoading = state =>state.featuredSubreddits.loading;\r\nexport const selectFeaturedSubredditsError = state => state.featuredSubreddits.error;\r\n\r\nconst featuredSubredditSlice = createSlice(options);\r\n\r\nexport default featuredSubredditSlice.reducer;           ","import React from \"react\";\r\n\r\nconst SkeletonSubredditCard = () => {\r\n    return (\r\n        <div data-testid='subreddit-card' \r\n            className='subreddit-card' >\r\n              <div className='subreddit-card-img-container skeleton'>\r\n                </div>\r\n                <div className='subreddit-card-text-container'\r\n                    style={{width: '65%'}} >\r\n                    <span className='subreddit-card-title' style={{width: '70%'}} >\r\n                        <div className='skeleton-detail skeleton'></div>\r\n                        <div className='skeleton-detail skeleton'\r\n                            style={{marginTop: '0.5em'}}> </div>\r\n                    </span>\r\n                </div>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonSubredditCard; ","import React, { useEffect } from \"react\";\r\nimport SubredditCard from \"../SubredditCard/SubredditCard\";\r\nimport './SubredditMenu.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchFeaturedSubreddits, selectFeaturedSubreddits, selectFeaturedSubredditsError, selectFeaturedSubredditsLoading } from \"../../Features/featuredSubredditSlice/featuredSubredditSlice\";\r\nimport SkeletonSubredditCard from \"../SkeletonComponents/SkeletonSubredditCard\";\r\n\r\nconst SubredditMenu = () => {\r\n     const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchFeaturedSubreddits());\r\n    },[dispatch])\r\n\r\n   const featuredSubreddits =  useSelector(selectFeaturedSubreddits); \r\n   const loading = useSelector(selectFeaturedSubredditsLoading);\r\n   const error = useSelector(selectFeaturedSubredditsError);\r\n\r\n\r\n   if (loading) return (\r\n        <aside data-testid='subreddit-menu' className='subreddit-menu'>\r\n            <h3 className='subreddit-menu-heading'>Featured Subreddits</h3>\r\n            <div data-testid='subreddit-card-container' className='subreddit-card-container'>\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n                <SkeletonSubredditCard />\r\n            </div>\r\n        </aside>\r\n   );\r\n\r\n   if (error) return (\r\n        <aside data-testid='subreddit-menu' className='subreddit-menu'>\r\n            <h3 className='subreddit-menu-heading'>Featured Subreddits </h3>\r\n            <div data-testid='subreddit-card-container' className='subreddit-card-container'>\r\n                <p style={{fontSize: '1rem'}} > Failed To Load Subreddits  </p>\r\n            </div>\r\n        </aside>\r\n   );\r\n\r\n    return (\r\n        <aside data-testid='subreddit-menu' className='subreddit-menu'>\r\n            <h3 className='subreddit-menu-heading'>Featured Subreddits</h3>\r\n            <div data-testid='subreddit-card-container' className='subreddit-card-container'>\r\n                {featuredSubreddits.slice(0,10).map((subredditObject, index) => {\r\n                    return <SubredditCard key={index} data={subredditObject} />\r\n                })}\r\n            </div>\r\n        </aside>\r\n    )\r\n};\r\n\r\nexport default SubredditMenu;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearPosts, fetchInitialPosts, selectInitialPosts, selectInitialPostsError, selectInitialPostsLoading } from \"../../Features/initialPostsSlice/initialPostsSlice\";\r\nimport FilterMenu from \"../FilterMenu/FilterMenu\";\r\nimport PostContainer from \"../PostContainer/PostContainer\";\r\nimport SubredditMenu from \"../SubredditMenu/SubredditMenu\";\r\n\r\n\r\nconst Content = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(fetchInitialPosts());\r\n\r\n        return () => {\r\n            dispatch(clearPosts())\r\n        }\r\n\r\n    },[dispatch]);\r\n\r\n    const initialPosts = useSelector(selectInitialPosts);\r\n    const loading = useSelector(selectInitialPostsLoading);\r\n    const error = useSelector(selectInitialPostsError);\r\n    \r\n    return (\r\n        <main data-testid='content' className='main'>\r\n            <FilterMenu />\r\n            <SubredditMenu />\r\n            <PostContainer data={initialPosts} loading={loading} error={error} />\r\n        </main>\r\n    )      \r\n};\r\n\r\nexport default Content;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    subreddits: {},\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\nexport const fetchSubreddit = createAsyncThunk('subredditSlice/FetchSubreddit', async (subreddit) => {\r\n    const response = await API.getSubreddit(subreddit);\r\n    return response;\r\n})\r\n\r\nconst options = {\r\n    name:'subredditsSlice',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchSubreddit.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubreddit.fulfilled, (state, action) => {\r\n            const subredditName = action.payload.display_name_prefixed;\r\n            state.subreddits[subredditName] = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubreddit.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n}\r\n\r\nexport const selectSubredditSliceLoading = state => state.subreddits.loading;\r\nexport const selectSubredditSliceError = state => state.subreddits.error;\r\n\r\nconst subredditSlice = createSlice(options);\r\n\r\nexport default subredditSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\n\r\nexport const fetchFilteredPosts = createAsyncThunk('filterSlice/fetchFilteredPosts', async (filter) => {\r\n    const response = await API.getFilteredSubreddits(filter);\r\n    return response; \r\n})\r\n\r\nconst options = {\r\n    name: 'filteredPosts',\r\n    initialState: initialState,\r\n    reducers: {\r\n        clearPosts: state => {state.posts = []}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchFilteredPosts.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchFilteredPosts.fulfilled, (state, action) => {\r\n            state.posts = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchFilteredPosts.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n\r\n};\r\n\r\nconst filteredPostsSlice = createSlice(options);\r\n\r\nexport const selectFilteredPosts = state => state.filteredPosts.posts;\r\nexport const selectFilteredPostsLoading = state => state.filteredPosts.loading;\r\nexport const selectFilteredPostsError = state => state.filteredPosts.error;\r\n\r\nexport default filteredPostsSlice.reducer;\r\nexport const { clearPosts } = filteredPostsSlice.actions;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    post: {},\r\n    comments:[],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\n\r\nexport const fetchPostWithComments = createAsyncThunk('postWithCommentsSlice/fetchPostWithComments', async (subreddit, postID) => {\r\n    const response = await API.getPostWithComments(subreddit, postID);\r\n    return response; \r\n})\r\n\r\nconst options = {\r\n    name: 'postWithCommentsSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        clearPost: state => {state.post = {}},\r\n        clearComments: state => {state.comments = []}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchPostWithComments.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchPostWithComments.fulfilled, (state, action) => {\r\n            const postData = action.payload[0];\r\n            const commentsData = action.payload[1];\r\n            state.post = postData.data.children[0].data;\r\n            state.comments = commentsData.data.children;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchPostWithComments.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n\r\n};\r\n\r\nconst postWithCommentsSlice = createSlice(options);\r\n\r\nexport const selectPost = state => state.postWithComments.post;\r\nexport const selectComments = state => state.postWithComments.comments;\r\nexport const selectPostWithCommentsLoading = state => state.postWithComments.loading;\r\nexport const selectPostWithCommentsError = state => state.postWithComments.error;\r\n\r\nexport default postWithCommentsSlice.reducer;\r\nexport const { clearPost, clearComments } = postWithCommentsSlice.actions;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\n\r\nexport const fetchSubredditPosts = createAsyncThunk('SubredditPostsSlice/fetchSubredditPosts', async (subreddit) => {\r\n    const response = await API.getSubredditPosts(subreddit);\r\n    return response; \r\n})\r\n\r\nconst options = {\r\n    name: 'subredditPosts',\r\n    initialState: initialState,\r\n    reducers: {\r\n        clearSubredditPosts: state => {state.posts = []}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchSubredditPosts.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubredditPosts.fulfilled, (state, action) => {\r\n            state.posts = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSubredditPosts.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n\r\n};\r\n\r\nconst subredditPostsSlice = createSlice(options);\r\n\r\nexport const selectSubredditPosts = state => state.subredditPosts.posts;\r\nexport const selectSubredditPostsLoading = state => state.subredditPosts.loading;\r\nexport const selectSubredditPostsError = state => state.subredditPosts.error;\r\n\r\nexport default subredditPostsSlice.reducer;\r\nexport const { clearSubredditPosts } = subredditPostsSlice.actions;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    userDetails:{},\r\n    loading: false,\r\n    error: false\r\n}\r\n\r\nexport const fetchUserDetails = createAsyncThunk('userDetailsSlice/FetchUserDetails', async (userName) => {\r\n    const response = await API.getUserDetails(userName);\r\n    const userIcon = response.icon_img;\r\n    let shouldLoad;\r\n    \r\n    if (userIcon === '' || userIcon === null) shouldLoad = false;\r\n    else shouldLoad = true;\r\n    \r\n    const payload = { userName, userIcon, shouldLoad };\r\n    return payload;\r\n})\r\n\r\nconst options = {\r\n    name:'userDetailsSlice',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchUserDetails.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchUserDetails.fulfilled, (state, action) => {                \r\n            state.userDetails[action.payload.userName] = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchUserDetails.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst userDetailsSlice = createSlice(options);\r\n\r\nexport default userDetailsSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { API } from \"../../API/API\";\r\n\r\nconst initialState = {\r\n    searchResults: [],\r\n    loading: true,\r\n    error: false\r\n}\r\n\r\n\r\nexport const fetchSearchResults = createAsyncThunk('searchResultsSlice/fetchSearchResults', async (searchTerm) => {\r\n    const response = await API.getSearchResults(searchTerm);\r\n    return response; \r\n})\r\n\r\nconst options = {\r\n    name: 'searchResultsSlice',\r\n    initialState: initialState,\r\n    reducers: {\r\n        clearSearchResults: state => {state.searchResults = []}\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchSearchResults.pending, (state, action) => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSearchResults.fulfilled, (state, action) => {\r\n            state.searchResults = action.payload;\r\n            state.loading = false;\r\n            state.error = false;\r\n        })\r\n        builder.addCase(fetchSearchResults.rejected, (state, action) => {\r\n            console.log('rejected')\r\n            state.loading = false;\r\n            state.error = true;\r\n        })\r\n    }\r\n\r\n};\r\n\r\nconst searchResultsSlice = createSlice(options);\r\n\r\nexport const selectSearchResults = state => state.searchResults.searchResults;\r\nexport const selectSearchResultsLoading = state => state.searchResults.loading;\r\nexport const selectSearchResultsError = state => state.searchResults.error;\r\n\r\nexport default searchResultsSlice.reducer;\r\nexport const { clearSearchResults } = searchResultsSlice.actions;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport initialPostsReducer from \"../Features/initialPostsSlice/initialPostsSlice\";\r\nimport subredditImageSliceReducer from \"../Features/subredditImageSlice/subredditImageSlice\";\r\nimport subredditSliceReducer from \"../Features/subredditSlice/subredditSlice\";\r\nimport featuredSubredditSliceReducer from \"../Features/featuredSubredditSlice/featuredSubredditSlice\";\r\nimport filteredPostsSliceReducer from \"../Features/filterSlice/filterSlice\";\r\nimport postWithCommentsReducer from \"../Features/postWithCommentsSlice/postWithCommentsSlice\";\r\nimport subreadditPostSliceReducer from \"../Features/subredditPosts/subreadditPostSlice\";\r\nimport userDetailsReducer from \"../Features/userDetailsSlice/userDetailsSlice\";\r\nimport searchResultsReducer from \"../Features/searchResultsSlice/searchResultsSlice\";\r\nimport themeReducer from \"../Features/themeSlice/themeSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        initialPosts: initialPostsReducer,\r\n        subreddits: subredditSliceReducer,\r\n        subredditImages: subredditImageSliceReducer,\r\n        featuredSubreddits: featuredSubredditSliceReducer,\r\n        filteredPosts: filteredPostsSliceReducer,\r\n        postWithComments: postWithCommentsReducer,\r\n        subredditPosts: subreadditPostSliceReducer,\r\n        userDetails: userDetailsReducer,\r\n        searchResults: searchResultsReducer,\r\n        theme: themeReducer\r\n    }\r\n})\r\n\r\nexport default store;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation} from \"react-router-dom\";\r\nimport { clearPosts, fetchFilteredPosts, selectFilteredPosts, selectFilteredPostsLoading } from \"../../Features/filterSlice/filterSlice\";\r\nimport { selectInitialPostsError } from \"../../Features/initialPostsSlice/initialPostsSlice\";\r\nimport FilterMenu from \"../FilterMenu/FilterMenu\";\r\nimport PostContainer from \"../PostContainer/PostContainer\";\r\nimport SubredditMenu from \"../SubredditMenu/SubredditMenu\";\r\n\r\n\r\nconst FilteredContent = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const params = useLocation()\r\n    \r\n     useEffect(() => {\r\n         const pathname = params.pathname.substring(1);\r\n         dispatch(fetchFilteredPosts(pathname));\r\n         return () => {\r\n            dispatch(clearPosts());\r\n         }\r\n     }, [dispatch, params.pathname])\r\n\r\n     const filteredPosts = useSelector(selectFilteredPosts);\r\n     const loading = useSelector(selectFilteredPostsLoading);\r\n     const error = useSelector(selectInitialPostsError);\r\n\r\n    return (\r\n        <main data-testid='content' className='main'>\r\n        <FilterMenu />\r\n        <SubredditMenu />\r\n        <PostContainer data={filteredPosts} loading={loading} error={error} />\r\n    </main>\r\n    )\r\n}\r\n\r\nexport default FilteredContent;","import React from \"react\";\r\nimport './CommentCard.css';\r\nimport { BsBoxArrowInUpRight, BsShareFill } from 'react-icons/bs';\r\nimport { copyToClipboard, getPostTime } from \"../../Helpers/helpers\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport renderTooltip from \"../Tooltip/Tooltip\";\r\n\r\nconst CommentCard = ({comment}) => {\r\n\r\n    let shouldLoad = comment && Object.keys(comment).length !== 0 ? true : false; \r\n    \r\n\r\n    if (shouldLoad) return (\r\n        <section className='comment-card'>\r\n            <div className='comment-card-user-details'>         \r\n                <span className='comment-card-username'> {comment.data.author} </span>\r\n                <span className='post-time'> {getPostTime(comment.data.created_utc)} </span>\r\n            </div>\r\n            <div className='comment-card-body'>    \r\n                <p className='comment-text'> {comment.data.body} </p>\r\n            </div>\r\n            <div className='comment-card-actions'>\r\n                <BsBoxArrowInUpRight className='comment-card-icon' />\r\n                <span> {comment.data.ups} Upvotes </span>\r\n                <div className='comment-card-share' onClick={() => copyToClipboard()}>\r\n                    <BsShareFill className='comment-card-icon' />\r\n                    <OverlayTrigger\r\n                                placement=\"right\"\r\n                                delay={{ show: 150, hide: 400 }}\r\n                                overlay={renderTooltip}\r\n                                >\r\n                        <span> Share </span>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n    return null;\r\n};\r\n\r\nexport default CommentCard;","import React from \"react\";\r\n\r\nconst SkeletonCommentCard = () => {\r\n    return (\r\n        <section className='comment-card skeleton' \r\n                style={{width: '85%', \r\n                        height:'7em', \r\n                        marginLeft: '3em', \r\n                        marginBottom: '2em', \r\n                        borderLeft: 'none'}}>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SkeletonCommentCard;","import React from \"react\";\r\nimport SkeletonCommentCard from \"./SkeletonCommentCard\";\r\n\r\nconst SkeletonThread = () => {\r\n\r\n    return ( \r\n        <article className='thread-container'>\r\n            <nav className='thread-nav' >\r\n                <div className='skeleton skeleton-title' style={{margin: '1em', width: '30%'}}></div>\r\n            </nav>    \r\n            <header className='thread-header flex' >\r\n                <div className='upvotes-container flex'>      \r\n                        <div className='skeleton skeleton-detail' style={{width: '30%', margin: '0.5em'}}></div>                    \r\n                        <div className='skeleton skeleton-detail' style={{width: '30%', margin: '0.5em'}}></div>\r\n                </div>\r\n                <section className='thread-details flex'>\r\n                    <div className='thread-user-container flex'>\r\n                        <div className='thread-image-container skeleton'> </div>\r\n                        <div className='skeleton skeleton-text' style={{width: '25%'}}></div>\r\n                    </div>\r\n                    <div className='thread-title-container' >\r\n                        <div className='skeleton skeleton-title' style={{width: '90%'}}></div>\r\n                        <div className='skeleton skeleton-title'></div>\r\n                    </div>\r\n                </section>\r\n            </header>\r\n            <section className='thread-body'>\r\n                <div className='skeleton skeleton-text'></div>\r\n                <div className='skeleton skeleton-text'></div>\r\n                <div className='skeleton skeleton-text'></div>\r\n            </section>\r\n            <section className='thread-comments'>\r\n                <div className='skeleton skeleton-title' style={{width: '20%', marginLeft: '0'}}></div>\r\n            </section>\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n                <SkeletonCommentCard />\r\n        </article> \r\n    );\r\n}; \r\n\r\nexport default SkeletonThread;\r\n","import React from \"react\";\r\nimport { BsPersonFill } from 'react-icons/bs'\r\nimport { getIconURL } from \"../../Helpers/helpers\";\r\n\r\nconst UserIcon = ({userData}) => {\r\n\r\n    const shouldLoad = userData ?  userData.shouldLoad : false;\r\n\r\n    return (\r\n        <div>\r\n            { shouldLoad ? \r\n            <img src={getIconURL(userData.userIcon)} alt={userData.userName + ' icon'} className='user-icon' /> \r\n            : \r\n            <BsPersonFill className='no-image'/>\r\n            }\r\n        </div> )\r\n}\r\n\r\nexport default UserIcon;","import Markdown from \"markdown-to-jsx\";\r\nimport { useEffect } from \"react\";\r\nimport { BsBoxArrowInUpRight } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchUserDetails } from \"../../Features/userDetailsSlice/userDetailsSlice\";\r\nimport { getPostTime, mediaPreview, upvoteFormat } from \"../../Helpers/helpers\";\r\nimport CommentCard from \"../CommentCard/CommentCard\";\r\nimport ErrorCard from \"../ErrorCard/ErrorCard\";\r\nimport SkeletonThread from \"../SkeletonComponents/SkeletonThread\";\r\nimport UserIcon from \"../UserIcon/UserIcon\";\r\nimport './Thread.css';\r\n\r\n\r\nconst Thread = ({ post, comments, params, loading, error, shouldLoad }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {subreddit, postID } = params;\r\n    const { ups, upvote_ratio, title, author, created, post_hint, url, media, selftext}  = post;\r\n    \r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        if (shouldLoad) {\r\n        dispatch(fetchUserDetails(author)) }\r\n    }, [shouldLoad, author, dispatch])\r\n\r\n    const userData = useSelector( state => state.userDetails.userDetails[author]);\r\n\r\n\r\n    if (error) return (\r\n        <section className='post-container'>\r\n            <ErrorCard />\r\n        </section>\r\n    );\r\n\r\n    if (shouldLoad && !loading) return (\r\n        <article className='thread-container'>\r\n            <nav className='thread-nav'>\r\n                <span className='subreddit-path font'> <Link to='/'> Home </Link> / Subreddits / <Link to={`/subreddit/${subreddit}`}> {subreddit} </Link> / {postID} </span>\r\n            </nav>    \r\n            <header className='thread-header flex' >\r\n                <div className='upvotes-container flex'>\r\n                    <span className='upvotes flex'>\r\n                        <BsBoxArrowInUpRight />\r\n                         { ups ? upvoteFormat(ups) : '...'}\r\n                    </span>\r\n                    <span className='thread-ratio'>\r\n                      { upvote_ratio > 0.01 ? upvote_ratio.toString().slice(2,4): 1 }% ratio \r\n                    </span>\r\n                </div>\r\n                <section className='thread-details flex'>\r\n                    <div className='thread-user-container flex'>\r\n                        <div className='thread-image-container'> \r\n                            <UserIcon userData={userData} />\r\n                        </div>\r\n                        <span className='post-user-name'> {author} </span>\r\n                        <span className='post-time'> {getPostTime(created)}</span>\r\n                    </div>\r\n                    <div className='thread-title-container'>\r\n                        <h1>{title}</h1>\r\n                        <div className='underline'></div>\r\n                    </div>\r\n                </section>\r\n            </header>\r\n            <br />\r\n           \r\n            <section className='thread-body'>\r\n                {selftext ? <Markdown>{selftext}</Markdown> : null}\r\n                { post_hint ? <div className='thread-media-preview'>\r\n                        {mediaPreview(post_hint, url, media, 'thread')} \r\n                    </div> : null}\r\n            </section>\r\n            <section className='thread-comments'>\r\n                <h2>Discussions</h2>\r\n                {comments.map((comment, index) => {\r\n                    return (<CommentCard key={index} comment={comment} />);\r\n                })}\r\n            </section>\r\n        </article>\r\n    )\r\n\r\n    return (\r\n        <SkeletonThread /> \r\n    )\r\n\r\n   \r\n};\r\n\r\nexport default Thread;\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { clearComments, clearPost, fetchPostWithComments, selectComments, selectPost, selectPostWithCommentsError, selectPostWithCommentsLoading } from \"../../Features/postWithCommentsSlice/postWithCommentsSlice\";\r\nimport SubredditMenu from \"../SubredditMenu/SubredditMenu\";\r\nimport Thread from \"../Thread/Thread\";\r\n\r\nconst PostView = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPostWithComments(params));\r\n        \r\n        return () => {\r\n            dispatch(clearPost());\r\n            dispatch(clearComments());\r\n        };\r\n\r\n    }, [dispatch, params]);\r\n\r\n    const postData = useSelector(selectPost);\r\n    const commentData = useSelector(selectComments);\r\n    const loading = useSelector(selectPostWithCommentsLoading);\r\n    const error = useSelector(selectPostWithCommentsError);\r\n    const shouldLoad = Object.keys(postData).length !== 0 ? true : false; \r\n    return (\r\n        <main className='main'>\r\n            <SubredditMenu /> \r\n            <Thread post={postData} \r\n                    comments={commentData} \r\n                    params={params} \r\n                    loading={loading} \r\n                    error={error}\r\n                    shouldLoad={shouldLoad} /> \r\n                         \r\n        </main>\r\n        )\r\n\r\n    };\r\n\r\nexport default PostView;","import React from \"react\";\r\nimport \"./AboutSubreddit.css\";\r\nimport { FaBirthdayCake } from 'react-icons/fa'\r\nimport { getDate, upvoteFormat } from \"../../Helpers/helpers\";\r\n\r\nconst AboutSubreddit = ({ data }) => {\r\n    \r\n    const { display_name, display_name_prefixed, public_description, subscribers, active_user_count, created} = data;\r\n    \r\n    return (\r\n        <aside  className='about'>\r\n            <h3>About {display_name} Community</h3>\r\n            <section className='about-body'>\r\n                <p>{display_name_prefixed} {public_description} </p>\r\n                <div className='about-data'>\r\n                    <div className='about-column'>\r\n                        <span className='about-subscribers data'> {upvoteFormat(subscribers)} </span>\r\n                        <span className='about-text'>Subscribers</span>\r\n                    </div>\r\n                    <div className='about-column'>\r\n                        <span className='about-users-online data'> {upvoteFormat(active_user_count)} </span>\r\n                        <span className='about-text'> Online </span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <footer className='about-footer'>\r\n                <FaBirthdayCake className='about-cake' />\r\n                <span className='creation-date'> Created {getDate(created)} </span>\r\n            </footer>\r\n        </aside> \r\n    ); \r\n    \r\n};\r\n\r\nexport default AboutSubreddit;","import React from \"react\";\r\n\r\nconst SkeletonAboutSubreddit = () => {\r\n    return (\r\n        <aside  className='about'>\r\n            <h3><div className='skeleton-title skeleton'\r\n                style={{width: '80%', marginBottom: '0.5em'}}></div> </h3>\r\n            <section className='about-body' style={{padding: '0.5em 0 0.5em'}}>\r\n                    <div className='skeleton-text skeleton'></div>\r\n                    <div className='skeleton-text skeleton'></div>\r\n                    <div className='skeleton-text skeleton'></div>\r\n            </section>\r\n            <footer className='about-footer'>\r\n                <span className='creation-date'>\r\n                    <div className='skeleton-text skeleton'></div>  \r\n                </span>\r\n            </footer>\r\n        </aside> \r\n    );\r\n}\r\n\r\nexport default SkeletonAboutSubreddit;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { clearSubredditPosts, fetchSubredditPosts, selectSubredditPosts, selectSubredditPostsError, selectSubredditPostsLoading } from \"../../Features/subredditPosts/subreadditPostSlice\";\r\nimport { fetchSubreddit, selectSubredditSliceLoading } from \"../../Features/subredditSlice/subredditSlice\";\r\nimport AboutSubreddit from \"../AboutSubreddit/AboutSubreddit\";\r\nimport PostContainer from \"../PostContainer/PostContainer\";\r\nimport SkeletonAboutSubreddit from \"../SkeletonComponents/SkeletonAboutSubreddit\";\r\nimport SubredditMenu from \"../SubredditMenu/SubredditMenu\";\r\n\r\nconst SubredditVeiw = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams();\r\n    const subredditNamePrefixed = 'r/' + params.subreddit\r\n\r\n    useEffect(() => {   \r\n        dispatch(fetchSubreddit(subredditNamePrefixed))\r\n        dispatch(fetchSubredditPosts(subredditNamePrefixed))\r\n        return () => {\r\n            dispatch(clearSubredditPosts())\r\n        }\r\n    },[subredditNamePrefixed, dispatch])\r\n\r\n    const data = useSelector(state => state.subreddits.subreddits[subredditNamePrefixed]);\r\n    const subredditLoading =  useSelector(selectSubredditSliceLoading);\r\n    \r\n    const posts = useSelector(selectSubredditPosts);\r\n    const postLoading = useSelector(selectSubredditPostsLoading);\r\n    const postError = useSelector(selectSubredditPostsError);\r\n\r\n    return (\r\n        <main className='main'>\r\n            { data  && ! subredditLoading ?  <AboutSubreddit data={data} /> : <SkeletonAboutSubreddit />}\r\n            <SubredditMenu />\r\n            <PostContainer data={posts} loading={postLoading} error={postError} />\r\n        </main>\r\n    );\r\n\r\n};\r\n\r\nexport default SubredditVeiw;","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { clearSearchResults, fetchSearchResults, selectSearchResults, selectSearchResultsError, selectSearchResultsLoading } from \"../../Features/searchResultsSlice/searchResultsSlice\";\r\nimport PostContainer from \"../PostContainer/PostContainer\";\r\nimport SubredditMenu from \"../SubredditMenu/SubredditMenu\";\r\n\r\n\r\nconst SearchResults = () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        dispatch(fetchSearchResults(params.searchTerm))\r\n        return () => {dispatch(clearSearchResults())}\r\n    }, [params, dispatch])\r\n\r\n    const posts = useSelector(selectSearchResults);\r\n    const loading = useSelector(selectSearchResultsLoading);\r\n    const error = useSelector(selectSearchResultsError);\r\n    const noResults = posts.length === 0 && !loading ? true : false;\r\n\r\n    return (\r\n        <main className='main'>\r\n            <SubredditMenu />\r\n            <PostContainer data={posts} loading={loading} noResults={noResults} error={error} />\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default SearchResults;","export default __webpack_public_path__ + \"static/media/PeteAndBas.b4255aea.jpg\";","import React from \"react\";\r\nimport { MdError } from 'react-icons/md';\r\nimport { Link } from \"react-router-dom\";\r\nimport notFoundImage from './image/PeteAndBas.jpg';\r\nimport './NoMatch.css';\r\n\r\nconst NoMatch = () => {\r\n    return (\r\n        <main className='main-404'>\r\n            <div className='image-container-404'> \r\n                <a href='https://youtu.be/onYiiDy-VV4' target='_blank' rel=\"noreferrer\">\r\n                    <img src={notFoundImage}  alt='404 Pete and Bas' />\r\n                </a>\r\n            </div>\r\n            <p> <MdError /> No match found! </p>\r\n            <p> Either the URL does not exist or the search term is invalid. </p>\r\n            <Link to='/'>\r\n                <button className='button-404'> Go Home</button>\r\n            </Link>\r\n        </main>\r\n        \r\n    );\r\n}\r\n\r\nexport default NoMatch;","import './App.css';\nimport Navbar from '../Components/Navbar/Navbar'\nimport Content from '../Components/Content/Content';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport FilteredContent from '../Components/FilteredContent/FilteredContent';\nimport PostView from '../Components/PostVeiw/PostView';\nimport SubredditVeiw from '../Components/SubredditView/SubredditView';\nimport SearchResults from '../Components/SearchResults/SearchResults';\nimport NoMatch from '../Components/NoMatch/NoMatch';\nimport { useEffect } from 'react';\nimport { updateBodyTheme } from '../Helpers/helpers';\nimport useLocalStorage from 'use-local-storage';\n\nconst App = () => {\n\n  const [theme] = useLocalStorage('app-theme', 'light');\n  \n  useEffect(() => {\n    updateBodyTheme(theme);\n  },[theme]) \n\n  return (\n    <div className=\"App\" data-testid='App'>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <Routes>\n              <Route path='/' element={<Content />} />\n              <Route path='/hot'  element={<FilteredContent />} />\n              <Route path='/new' element={<FilteredContent  />} />\n              <Route path='/rising' element={<FilteredContent  />} />\n              <Route path='/top' element={<FilteredContent  />} />\n              <Route path='/post/:subreddit/:postID' element={<PostView />} />\n              <Route path='/subreddit/:subreddit' element={<SubredditVeiw />} />\n              <Route path='/search/:searchTerm' element={<SearchResults />} />\n              <Route path='*' element={<NoMatch />} />\n            </Routes>\n          </Router> \n        </Provider>  \n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}